$schema: https://json-schema.org/draft/2020-12/schema
$id: https://liuliaoyu.github.io/schemas/clang-format.yaml
$comment: 'reference: https://json.schemastore.org/clang-format.json'
title: clang-format style options
description: JSON Schema for `.clang-format` style options(clang-format 17.0.1).
$defs:
  ListOfStrings:
    type: array
    items:
      type: string
    $anchor: ListOfStrings
  ListOfRawStringFormats:
    type: array
    items:
      type: object
      properties:
        Regex:
          type: string
        Priority:
          type: string
        SortPriority:
          type: string
        CaseSensitive:
          type: string
    $anchor: ListOfRawStringFormats
  ListOfIncludeCategories:
    type: array
    items:
      type: object
      properties:
        Language:
          type: string
        Delimiters:
          $ref: '#/$defs/ListOfStrings'
        CanonicalDelimiter:
          type: string
        BasedOnStyle:
          type: string
        EnclosingFunctions:
          $ref: '#/$defs/ListOfStrings'
    $anchor: ListOfIncludeCategories
  BasedOnStyleLiterals:
    enum:
    - LLVM
    - Google
    - Chromium
    - Mozilla
    - WebKit
    - Microsoft
    - GNU
    - InheritParentConfig
    $anchor: BasedOnStyleLiterals
  BracketAlignmentStyle:
    enum:
    - Align
    - DontAlign
    - AlwaysBreak
    - BlockIndent
    $anchor: BracketAlignmentStyle
  ArrayInitializerAlignmentStyle:
    enum:
    - Left
    - Right
    - None
    $anchor: ArrayInitializerAlignmentStyle
  EscapedNewlineAlignmentStyle:
    enum:
    - DontAlign
    - Left
    - Right
    $anchor: EscapedNewlineAlignmentStyle
  OperandAlignmentStyle:
    enum:
    - DontAlign
    - Align
    - AlignAfterOperator
    $anchor: OperandAlignmentStyle
  ShortBlockStyle:
    enum:
    - Never
    - Empty
    - Always
    $anchor: ShortBlockStyle
  ShortFunctionStyle:
    enum:
    - None
    - InlineOnly
    - Empty
    - Inline
    - All
    $anchor: ShortFunctionStyle
  ShortIfStyle:
    enum:
    - Never
    - WithoutElse
    - OnlyFirstIf
    - AllIfsAndElse
    $anchor: ShortIfStyle
  ShortLambdaStyle:
    enum:
    - None
    - Empty
    - Inline
    - All
    $anchor: ShortLambdaStyle
  DefinitionReturnTypeBreakingStyle:
    enum:
    - None
    - All
    - TopLevel
    $anchor: DefinitionReturnTypeBreakingStyle
  ReturnTypeBreakingStyle:
    enum:
    - None
    - All
    - TopLevel
    - AllDefinitions
    - TopLevelDefinitions
    $anchor: ReturnTypeBreakingStyle
  BreakTemplateDeclarationsStyle:
    enum:
    - 'No'
    - MultiLine
    - 'Yes'
    $anchor: BreakTemplateDeclarationsStyle
  BitFieldColonSpacingStyle:
    enum:
    - Both
    - None
    - Before
    - After
    $anchor: BitFieldColonSpacingStyle
  AttributeBreakingStyle:
    enum:
    - Always
    - Leave
    - Never
    $anchor: AttributeBreakingStyle
  BinaryOperatorStyle:
    enum:
    - None
    - NonAssignment
    - All
    $anchor: BinaryOperatorStyle
  BraceBreakingStyle:
    enum:
    - Attach
    - Linux
    - Mozilla
    - Stroustrup
    - Allman
    - Whitesmiths
    - GNU
    - WebKit
    - Custom
    $anchor: BraceBreakingStyle
  BreakBeforeConceptDeclarationsStyle:
    enum:
    - Never
    - Allowed
    - Always
    $anchor: BreakBeforeConceptDeclarationsStyle
  BreakBeforeInlineASMColonStyle:
    enum:
    - Never
    - OnlyMultiline
    - Always
    $anchor: BreakBeforeInlineASMColonStyle
  BreakConstructorInitializersStyle:
    enum:
    - BeforeColon
    - BeforeComma
    - AfterColon
    $anchor: BreakConstructorInitializersStyle
  BreakInheritanceListStyle:
    enum:
    - BeforeColon
    - BeforeComma
    - AfterColon
    - AfterComma
    $anchor: BreakInheritanceListStyle
  EmptyLineAfterAccessModifierStyle:
    enum:
    - Never
    - Leave
    - Always
    $anchor: EmptyLineAfterAccessModifierStyle
  EmptyLineBeforeAccessModifierStyle:
    enum:
    - Never
    - Leave
    - LogicalBlock
    - Always
    $anchor: EmptyLineBeforeAccessModifierStyle
  IncludeBlocksStyle:
    enum:
    - Preserve
    - Merge
    - Regroup
    $anchor: IncludeBlocksStyle
  IndentExternBlockStyle:
    enum:
    - AfterExternBlock
    - NoIndent
    - Indent
    $anchor: IndentExternBlockStyle
  PPDirectiveIndentStyle:
    enum:
    - None
    - AfterHash
    - BeforeHash
    $anchor: PPDirectiveIndentStyle
  TrailingCommaStyle:
    enum:
    - None
    - Wrapped
    $anchor: TrailingCommaStyle
  JavaScriptQuoteStyle:
    enum:
    - Leave
    - Single
    - Double
    $anchor: JavaScriptQuoteStyle
  LambdaBodyIndentationKind:
    enum:
    - Signature
    - OuterScope
    $anchor: LambdaBodyIndentationKind
  LanguageKind:
    enum:
    - None
    - Cpp
    - CSharp
    - Java
    - JavaScript
    - Json
    - ObjC
    - Proto
    - TableGen
    - TextProto
    - Verilog
    $anchor: LanguageKind
  LineEndingStyle:
    enum:
    - LF
    - CRLF
    - DeriveLF
    - DeriveCRLF
    $anchor: LineEndingStyle
  NamespaceIndentationKind:
    enum:
    - None
    - Inner
    - All
    $anchor: NamespaceIndentationKind
  BinPackStyle:
    enum:
    - Auto
    - Always
    - Never
    $anchor: BinPackStyle
  PackConstructorInitializersStyle:
    enum:
    - Never
    - BinPack
    - CurrentLine
    - NextLine
    - NextLineOnly
    $anchor: PackConstructorInitializersStyle
  PointerAlignmentStyle:
    enum:
    - Left
    - Right
    - Middle
    $anchor: PointerAlignmentStyle
  QualifierAlignmentStyle:
    enum:
    - Leave
    - Left
    - Right
    - Custom
    $anchor: QualifierAlignmentStyle
  ReferenceAlignmentStyle:
    enum:
    - Pointer
    - Left
    - Right
    - Middle
    $anchor: ReferenceAlignmentStyle
  RemoveParenthesesStyle:
    enum:
    - Leave
    - MultipleParentheses
    - ReturnStatement
    $anchor: RemoveParenthesesStyle
  RequiresClausePositionStyle:
    enum:
    - OwnLine
    - WithPreceding
    - WithFollowing
    - SingleLine
    $anchor: RequiresClausePositionStyle
  RequiresExpressionIndentationKind:
    enum:
    - OuterScope
    - Keyword
    $anchor: RequiresExpressionIndentationKind
  SeparateDefinitionStyle:
    enum:
    - Leave
    - Always
    - Never
    $anchor: SeparateDefinitionStyle
  SortIncludesOptions:
    enum:
    - Never
    - CaseSensitive
    - CaseInsensitive
    $anchor: SortIncludesOptions
  SortJavaStaticImportOptions:
    enum:
    - Before
    - After
    $anchor: SortJavaStaticImportOptions
  SortUsingDeclarationsOptions:
    enum:
    - Never
    - Lexicographic
    - LexicographicNumeric
    $anchor: SortUsingDeclarationsOptions
  SpaceAroundPointerQualifiersStyle:
    enum:
    - Default
    - Before
    - After
    - Both
    $anchor: SpaceAroundPointerQualifiersStyle
  SpaceBeforeParensStyle:
    enum:
    - Never
    - ControlStatements
    - ControlStatementsExceptControlMacros
    - NonEmptyParentheses
    - Always
    - Custom
    $anchor: SpaceBeforeParensStyle
  SpacesInAnglesStyle:
    enum:
    - Never
    - Always
    - Leave
    $anchor: SpacesInAnglesStyle
  SpacesInParensStyle:
    enum:
    - Never
    - Custom
    $anchor: SpacesInParensStyle
  LanguageStandard:
    enum:
    - c++03
    - c++11
    - c++14
    - c++17
    - c++20
    - Latest
    - Auto
    $anchor: LanguageStandard
  UseTabStyle:
    enum:
    - Never
    - ForIndentation
    - ForContinuationAndIndentation
    - AlignWithSpaces
    - Always
    $anchor: UseTabStyle
  AlignConsecutiveStyle:
    oneOf:
    - enum:
      - None
      - Consecutive
      - AcrossEmptyLines
      - AcrossComments
      - AcrossEmptyLinesAndComments
    - type: object
      properties:
        Enabled:
          type: boolean
        AcrossEmptyLines:
          type: boolean
        AcrossComments:
          type: boolean
        AlignCompound:
          type: boolean
        PadOperators:
          type: boolean
      $anchor: AlignConsecutiveStyle
    $anchor: AlignConsecutiveStyle
  ShortCaseStatementsAlignmentStyle:
    type: object
    properties:
      Enabled:
        type: boolean
      AcrossEmptyLines:
        type: boolean
      AcrossComments:
        type: boolean
      AlignCaseColons:
        type: boolean
    $anchor: ShortCaseStatementsAlignmentStyle
  TrailingCommentsAlignmentKinds:
    enum:
    - Leave
    - Always
    - Never
    $anchor: TrailingCommentsAlignmentKinds
  TrailingCommentsAlignmentStyle:
    type: object
    properties:
      Kind:
        $ref: '#/$defs/TrailingCommentsAlignmentKinds'
      OverEmptyLines:
        type: integer
        minimum: -1
    $anchor: TrailingCommentsAlignmentStyle
  BraceWrappingAfterControlStatementStyle:
    enum:
    - Never
    - MultiLine
    - Always
    $anchor: BraceWrappingAfterControlStatementStyle
  BraceWrappingFlags:
    type: object
    properties:
      AfterCaseLabel:
        type: boolean
      AfterClass:
        type: boolean
      AfterControlStatement:
        $ref: '#/$defs/BraceWrappingAfterControlStatementStyle'
      AfterEnum:
        type: boolean
      AfterFunction:
        type: boolean
      AfterNamespace:
        type: boolean
      AfterObjCDeclaration:
        type: boolean
      AfterStruct:
        type: boolean
      AfterUnion:
        type: boolean
      AfterExternBlock:
        type: boolean
      BeforeCatch:
        type: boolean
      BeforeElse:
        type: boolean
      BeforeLambdaBody:
        type: boolean
      BeforeWhile:
        type: boolean
      IndentBraces:
        type: boolean
      SplitEmptyFunction:
        type: boolean
      SplitEmptyRecord:
        type: boolean
      SplitEmptyNamespace:
        type: boolean
    $anchor: BraceWrappingFlags
  IntegerLiteralSeparatorStyle:
    type: object
    properties:
      Binary:
        type: integer
        minimum: -128
        maximum: 127
      BinaryMinDigits:
        type: integer
        minimum: -128
        maximum: 127
      Decimal:
        type: integer
        minimum: -128
        maximum: 127
      DecimalMinDigits:
        type: integer
        minimum: -128
        maximum: 127
      Hex:
        type: integer
        minimum: -128
        maximum: 127
      HexMinDigits:
        type: integer
        minimum: -128
        maximum: 127
    $anchor: IntegerLiteralSeparatorStyle
  SpaceBeforeParensCustom:
    type: object
    properties:
      AfterControlStatements:
        type: boolean
      AfterForeachMacros:
        type: boolean
      AfterFunctionDeclarationName:
        type: boolean
      AfterFunctionDefinitionName:
        type: boolean
      AfterIfMacros:
        type: boolean
      AfterOverloadedOperator:
        type: boolean
      AfterRequiresInClause:
        type: boolean
      AfterRequiresInExpression:
        type: boolean
      BeforeNonEmptyParentheses:
        type: boolean
    $anchor: SpaceBeforeParensCustom
  SpacesInLineComment:
    type: object
    properties:
      Minimum:
        type: integer
        minimum: -1
      Maximum:
        type: integer
        minimum: -1
    $anchor: SpacesInLineComment
  SpacesInParensCustom:
    type: object
    properties:
      InConditionalStatements:
        type: boolean
      InCStyleCasts:
        type: boolean
      InEmptyParentheses:
        type: boolean
      Other:
        type: boolean
    $anchor: SpacesInParensCustom
properties:
  BasedOnStyle:
    $ref: '#/$defs/BasedOnStyleLiterals'
    meta-version: null
  AlignAfterOpenBracket:
    $ref: '#/$defs/BracketAlignmentStyle'
    meta-version: clang-format 3.8
  AlignArrayOfStructures:
    $ref: '#/$defs/ArrayInitializerAlignmentStyle'
    meta-version: clang-format 13
  AlignEscapedNewlines:
    $ref: '#/$defs/EscapedNewlineAlignmentStyle'
    meta-version: clang-format 5
  AlignOperands:
    $ref: '#/$defs/OperandAlignmentStyle'
    meta-version: clang-format 3.5
  AllowShortBlocksOnASingleLine:
    $ref: '#/$defs/ShortBlockStyle'
    meta-version: clang-format 3.5
  AllowShortFunctionsOnASingleLine:
    $ref: '#/$defs/ShortFunctionStyle'
    meta-version: clang-format 3.5
  AllowShortIfStatementsOnASingleLine:
    $ref: '#/$defs/ShortIfStyle'
    meta-version: clang-format 3.3
  AllowShortLambdasOnASingleLine:
    $ref: '#/$defs/ShortLambdaStyle'
    meta-version: clang-format 9
  AlwaysBreakAfterDefinitionReturnType:
    $ref: '#/$defs/DefinitionReturnTypeBreakingStyle'
    meta-version: clang-format 3.7
  AlwaysBreakAfterReturnType:
    $ref: '#/$defs/ReturnTypeBreakingStyle'
    meta-version: clang-format 3.8
  AlwaysBreakTemplateDeclarations:
    $ref: '#/$defs/BreakTemplateDeclarationsStyle'
    meta-version: clang-format 3.4
  BitFieldColonSpacing:
    $ref: '#/$defs/BitFieldColonSpacingStyle'
    meta-version: clang-format 12
  BreakAfterAttributes:
    $ref: '#/$defs/AttributeBreakingStyle'
    meta-version: clang-format 16
  BreakBeforeBinaryOperators:
    $ref: '#/$defs/BinaryOperatorStyle'
    meta-version: clang-format 3.6
  BreakBeforeBraces:
    $ref: '#/$defs/BraceBreakingStyle'
    meta-version: clang-format 3.7
  BreakBeforeConceptDeclarations:
    $ref: '#/$defs/BreakBeforeConceptDeclarationsStyle'
    meta-version: clang-format 12
  BreakBeforeInlineASMColon:
    $ref: '#/$defs/BreakBeforeInlineASMColonStyle'
    meta-version: clang-format 16
  BreakConstructorInitializers:
    $ref: '#/$defs/BreakConstructorInitializersStyle'
    meta-version: clang-format 5
  BreakInheritanceList:
    $ref: '#/$defs/BreakInheritanceListStyle'
    meta-version: clang-format 7
  EmptyLineAfterAccessModifier:
    $ref: '#/$defs/EmptyLineAfterAccessModifierStyle'
    meta-version: clang-format 13
  EmptyLineBeforeAccessModifier:
    $ref: '#/$defs/EmptyLineBeforeAccessModifierStyle'
    meta-version: clang-format 12
  IncludeBlocks:
    $ref: '#/$defs/IncludeBlocksStyle'
    meta-version: clang-format 6
  IndentExternBlock:
    $ref: '#/$defs/IndentExternBlockStyle'
    meta-version: clang-format 11
  IndentPPDirectives:
    $ref: '#/$defs/PPDirectiveIndentStyle'
    meta-version: clang-format 6
  InsertTrailingCommas:
    $ref: '#/$defs/TrailingCommaStyle'
    meta-version: clang-format 11
  JavaScriptQuotes:
    $ref: '#/$defs/JavaScriptQuoteStyle'
    meta-version: clang-format 3.9
  LambdaBodyIndentation:
    $ref: '#/$defs/LambdaBodyIndentationKind'
    meta-version: clang-format 13
  Language:
    $ref: '#/$defs/LanguageKind'
    meta-version: clang-format 3.5
  LineEnding:
    $ref: '#/$defs/LineEndingStyle'
    meta-version: clang-format 16
  NamespaceIndentation:
    $ref: '#/$defs/NamespaceIndentationKind'
    meta-version: clang-format 3.7
  ObjCBinPackProtocolList:
    $ref: '#/$defs/BinPackStyle'
    meta-version: clang-format 7
  PackConstructorInitializers:
    $ref: '#/$defs/PackConstructorInitializersStyle'
    meta-version: clang-format 14
  PointerAlignment:
    $ref: '#/$defs/PointerAlignmentStyle'
    meta-version: clang-format 3.7
  QualifierAlignment:
    $ref: '#/$defs/QualifierAlignmentStyle'
    meta-version: clang-format 14
  ReferenceAlignment:
    $ref: '#/$defs/ReferenceAlignmentStyle'
    meta-version: clang-format 13
  RemoveParentheses:
    $ref: '#/$defs/RemoveParenthesesStyle'
    meta-version: clang-format 17
  RequiresClausePosition:
    $ref: '#/$defs/RequiresClausePositionStyle'
    meta-version: clang-format 15
  RequiresExpressionIndentation:
    $ref: '#/$defs/RequiresExpressionIndentationKind'
    meta-version: clang-format 16
  SeparateDefinitionBlocks:
    $ref: '#/$defs/SeparateDefinitionStyle'
    meta-version: clang-format 14
  SortIncludes:
    $ref: '#/$defs/SortIncludesOptions'
    meta-version: clang-format 3.8
  SortJavaStaticImport:
    $ref: '#/$defs/SortJavaStaticImportOptions'
    meta-version: clang-format 12
  SortUsingDeclarations:
    $ref: '#/$defs/SortUsingDeclarationsOptions'
    meta-version: clang-format 5
  SpaceAroundPointerQualifiers:
    $ref: '#/$defs/SpaceAroundPointerQualifiersStyle'
    meta-version: clang-format 12
  SpaceBeforeParens:
    $ref: '#/$defs/SpaceBeforeParensStyle'
    meta-version: clang-format 3.5
  SpacesInAngles:
    $ref: '#/$defs/SpacesInAnglesStyle'
    meta-version: clang-format 3.4
  SpacesInParens:
    $ref: '#/$defs/SpacesInParensStyle'
    meta-version: clang-format 17
  Standard:
    $ref: '#/$defs/LanguageStandard'
    meta-version: clang-format 3.7
  UseTab:
    $ref: '#/$defs/UseTabStyle'
    meta-version: clang-format 3.7
  AccessModifierOffset:
    type: integer
    meta-version: clang-format 3.3
  AllowAllArgumentsOnNextLine:
    type: boolean
    meta-version: clang-format 9
  AllowAllParametersOfDeclarationOnNextLine:
    type: boolean
    meta-version: clang-format 3.3
  AllowShortCaseLabelsOnASingleLine:
    type: boolean
    meta-version: clang-format 3.6
  AllowShortEnumsOnASingleLine:
    type: boolean
    meta-version: clang-format 11
  AllowShortLoopsOnASingleLine:
    type: boolean
    meta-version: clang-format 3.7
  AlwaysBreakBeforeMultilineStrings:
    type: boolean
    meta-version: clang-format 3.4
  BinPackArguments:
    type: boolean
    meta-version: clang-format 3.7
  BinPackParameters:
    type: boolean
    meta-version: clang-format 3.7
  BracedInitializerIndentWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 17
  BreakAfterJavaFieldAnnotations:
    type: boolean
    meta-version: clang-format 3.8
  BreakArrays:
    type: boolean
    meta-version: clang-format 16
  BreakBeforeTernaryOperators:
    type: boolean
    meta-version: clang-format 3.7
  BreakStringLiterals:
    type: boolean
    meta-version: clang-format 3.9
  ColumnLimit:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  CompactNamespaces:
    type: boolean
    meta-version: clang-format 5
  ConstructorInitializerIndentWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  ContinuationIndentWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  Cpp11BracedListStyle:
    type: boolean
    meta-version: clang-format 3.4
  DerivePointerAlignment:
    type: boolean
    meta-version: clang-format 3.7
  DisableFormat:
    type: boolean
    meta-version: clang-format 3.7
  ExperimentalAutoDetectBinPacking:
    type: boolean
    meta-version: clang-format 3.7
  FixNamespaceComments:
    type: boolean
    meta-version: clang-format 5
  IndentAccessModifiers:
    type: boolean
    meta-version: clang-format 13
  IndentCaseBlocks:
    type: boolean
    meta-version: clang-format 11
  IndentCaseLabels:
    type: boolean
    meta-version: clang-format 3.3
  IndentGotoLabels:
    type: boolean
    meta-version: clang-format 10
  IndentRequiresClause:
    type: boolean
    meta-version: clang-format 15
  IndentWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  IndentWrappedFunctionNames:
    type: boolean
    meta-version: clang-format 3.7
  InsertBraces:
    type: boolean
    meta-version: clang-format 15
  InsertNewlineAtEOF:
    type: boolean
    meta-version: clang-format 16
  JavaScriptWrapImports:
    type: boolean
    meta-version: clang-format 3.9
  KeepEmptyLinesAtEOF:
    type: boolean
    meta-version: clang-format 17
  KeepEmptyLinesAtTheStartOfBlocks:
    type: boolean
    meta-version: clang-format 3.7
  MaxEmptyLinesToKeep:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  ObjCBlockIndentWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  ObjCBreakBeforeNestedBlockParam:
    type: boolean
    meta-version: clang-format 11
  ObjCSpaceAfterProperty:
    type: boolean
    meta-version: clang-format 3.7
  ObjCSpaceBeforeProtocolList:
    type: boolean
    meta-version: clang-format 3.7
  PPIndentWidth:
    type: integer
    meta-version: clang-format 13
  PenaltyBreakAssignment:
    type: integer
    minimum: 0
    meta-version: clang-format 5
  PenaltyBreakBeforeFirstCallParameter:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  PenaltyBreakComment:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  PenaltyBreakFirstLessLess:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  PenaltyBreakOpenParenthesis:
    type: integer
    minimum: 0
    meta-version: clang-format 14
  PenaltyBreakString:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  PenaltyBreakTemplateDeclaration:
    type: integer
    minimum: 0
    meta-version: clang-format 7
  PenaltyExcessCharacter:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  PenaltyIndentedWhitespace:
    type: integer
    minimum: 0
    meta-version: clang-format 12
  PenaltyReturnTypeOnItsOwnLine:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  ReflowComments:
    type: boolean
    meta-version: clang-format 3.8
  RemoveBracesLLVM:
    type: boolean
    meta-version: clang-format 14
  RemoveSemicolon:
    type: boolean
    meta-version: clang-format 16
  ShortNamespaceLines:
    type: integer
    minimum: 0
    meta-version: clang-format 13
  SpaceAfterCStyleCast:
    type: boolean
    meta-version: clang-format 3.5
  SpaceAfterLogicalNot:
    type: boolean
    meta-version: clang-format 9
  SpaceAfterTemplateKeyword:
    type: boolean
    meta-version: clang-format 4
  SpaceBeforeAssignmentOperators:
    type: boolean
    meta-version: clang-format 3.7
  SpaceBeforeCaseColon:
    type: boolean
    meta-version: clang-format 12
  SpaceBeforeCpp11BracedList:
    type: boolean
    meta-version: clang-format 7
  SpaceBeforeCtorInitializerColon:
    type: boolean
    meta-version: clang-format 7
  SpaceBeforeInheritanceColon:
    type: boolean
    meta-version: clang-format 7
  SpaceBeforeJsonColon:
    type: boolean
    meta-version: clang-format 17
  SpaceBeforeRangeBasedForLoopColon:
    type: boolean
    meta-version: clang-format 7
  SpaceBeforeSquareBrackets:
    type: boolean
    meta-version: clang-format 10
  SpaceInEmptyBlock:
    type: boolean
    meta-version: clang-format 10
  SpacesBeforeTrailingComments:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  SpacesInContainerLiterals:
    type: boolean
    meta-version: clang-format 3.7
  SpacesInSquareBrackets:
    type: boolean
    meta-version: clang-format 3.7
  TabWidth:
    type: integer
    minimum: 0
    meta-version: clang-format 3.7
  VerilogBreakBetweenInstancePorts:
    type: boolean
    meta-version: clang-format 17
  AlignConsecutiveAssignments:
    $ref: '#/$defs/AlignConsecutiveStyle'
    meta-version: clang-format 3.8
  AlignConsecutiveBitFields:
    $ref: '#/$defs/AlignConsecutiveStyle'
    meta-version: clang-format 11
  AlignConsecutiveDeclarations:
    $ref: '#/$defs/AlignConsecutiveStyle'
    meta-version: clang-format 3.8
  AlignConsecutiveMacros:
    $ref: '#/$defs/AlignConsecutiveStyle'
    meta-version: clang-format 9
  AlignConsecutiveShortCaseStatements:
    $ref: '#/$defs/ShortCaseStatementsAlignmentStyle'
    meta-version: clang-format 17
  AlignTrailingComments:
    $ref: '#/$defs/TrailingCommentsAlignmentStyle'
    meta-version: clang-format 3.7
  BraceWrapping:
    $ref: '#/$defs/BraceWrappingFlags'
    meta-version: clang-format 3.8
  IntegerLiteralSeparator:
    $ref: '#/$defs/IntegerLiteralSeparatorStyle'
    meta-version: clang-format 16
  SpaceBeforeParensOptions:
    $ref: '#/$defs/SpaceBeforeParensCustom'
    meta-version: clang-format 14
  SpacesInLineCommentPrefix:
    $ref: '#/$defs/SpacesInLineComment'
    meta-version: clang-format 13
  SpacesInParensOptions:
    $ref: '#/$defs/SpacesInParensCustom'
    meta-version: clang-format 17
  AttributeMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 12
  CommentPragmas:
    type: string
    meta-version: clang-format 3.7
  ForEachMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 3.7
  IfMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 13
  IncludeCategories:
    $ref: '#/$defs/ListOfIncludeCategories'
    meta-version: clang-format 3.8
  IncludeIsMainRegex:
    type: string
    meta-version: clang-format 3.9
  IncludeIsMainSourceRegex:
    type: string
    meta-version: clang-format 10
  JavaImportGroups:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 8
  MacroBlockBegin:
    type: string
    meta-version: clang-format 3.7
  MacroBlockEnd:
    type: string
    meta-version: clang-format 3.7
  Macros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 17.0
  NamespaceMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 9
  QualifierOrder:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 14
  RawStringFormats:
    $ref: '#/$defs/ListOfRawStringFormats'
    meta-version: clang-format 6
  StatementAttributeLikeMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 12
  StatementMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 8
  TypeNames:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 17
  TypenameMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 9
  WhitespaceSensitiveMacros:
    $ref: '#/$defs/ListOfStrings'
    meta-version: clang-format 11
type: object
